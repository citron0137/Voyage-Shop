1. 애플리케이션이 배포되었습니다.

{{- if contains "ClusterIP" .Values.service.type }}
   서비스 타입이 ClusterIP이므로 다음 명령어로 포트 포워딩하여 접속할 수 있습니다:

   kubectl port-forward svc/{{ .Values.app.name }} 8080:{{ .Values.service.port }}

   그런 다음 웹 브라우저에서 http://localhost:8080으로 접속하세요.
{{- else if contains "NodePort" .Values.service.type }}
   서비스 타입이 NodePort이므로 다음 명령어로 NodePort 번호를 확인하세요:

   export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ .Values.app.name }})
   export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
   echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
   서비스 타입이 LoadBalancer이므로 외부 IP가 할당될 때까지 기다리세요:

   kubectl get --namespace {{ .Release.Namespace }} svc -w {{ .Values.app.name }}
{{- end }}

{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
{{- range .paths }}
   인그레스를 통해 접속할 수 있습니다: http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
{{- end }}
{{- end }}
{{- end }}

2. MySQL 데이터베이스가 배포되었습니다.
   DB 이름: {{ .Values.mysql.config.MYSQL_DATABASE }}
   사용자: {{ .Values.mysql.config.MYSQL_USER }}

3. 애플리케이션 로그를 확인하려면:
   kubectl logs -f deployment/{{ include "voyage-shop.fullname" . }}-app 